export default {
	areReferencesModified: (await import('./areReferencesModified.js')).areReferencesModified,
	canUnaryExpressionBeResolved: (await import('./canUnaryExpressionBeResolved.js')).canUnaryExpressionBeResolved,
	createNewNode: (await import('./createNewNode.js')).createNewNode,
	createOrderedSrc: (await import('./createOrderedSrc.js')).createOrderedSrc,
	doesBinaryExpressionContainOnlyLiterals: (await import('./doesBinaryExpressionContainOnlyLiterals.js')).doesBinaryExpressionContainOnlyLiterals,
	evalInVm: (await import('./evalInVm.js')).evalInVm,
	evalWithDom: (await import('./evalWithDom.js')).evalWithDom,
	generateHash: (await import('./generateHash.js')).generateHash,
	getCache: (await import('./getCache.js')).getCache,
	getCalleeName: (await import('./getCalleeName.js')).getCalleeName,
	getDeclarationWithContext: (await import('./getDeclarationWithContext.js')).getDeclarationWithContext,
	getDescendants: (await import('./getDescendants.js')).getDescendants,
	getMainDeclaredObjectOfMemberExpression: (await import('./getMainDeclaredObjectOfMemberExpression.js')).getMainDeclaredObjectOfMemberExpression,
	getObjType: (await import('./getObjType.js')).getObjType,
	isNodeInRanges: (await import('./isNodeInRanges.js')).isNodeInRanges,
	normalizeScript: (await import('./normalizeScript.js')).normalizeScript,
	safeImplementations: (await import('./safeImplementations.js')),
	sandbox: (await import('./sandbox.js')).Sandbox,
};